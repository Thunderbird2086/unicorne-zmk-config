#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: multilineIntegerCellsIndent = "reindent"
// dt-formatter: multilineListCommaStyle = "leading"

&sk {
  /delete-property/ ignore-modifiers;
};

/ {
  combos {
    compatible = "zmk,combos";

    tab {
      key-positions = <2 3>;
      bindings = <&kp TAB>;
    };

    ctrl {
      key-positions = <26 27>;
      bindings = <&kp LCTRL>;
    };

    cmd {
      key-positions = <37 38>;
      bindings = <&kp LCMD>;
    };

    alt {
      key-positions = <39 40>;
      bindings = <&kp LEFT_ALT>;
    };

    shift {
      key-positions = <8 9>;
      bindings = <&kp LSHIFT>;
    };

    caps_word {
      key-positions = <17 18>;
      bindings = <&caps_word>;
    };

    delete {
      key-positions = <32 33>;
      bindings = <&kp DEL>;
    };
  };

  macros {
    greeting: greeting {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp H &kp E &kp L &kp L &kp O>;
    };

    rgblayer: rgb_layer {
      compatible = "zmk,behavior-macro-two-param";
      #binding-cells = <2>;
      bindings
        = <&macro_param_2to2 &rgb_ug RGB_COLOR_HSB_CMD MACRO_PLACEHOLDER &macro_param_1to1>
        , <&macro_press>
        , <&mo MACRO_PLACEHOLDER>
        , <&macro_pause_for_release>
        , <&macro_release>
        , <&macro_param_1to1 &mo MACRO_PLACEHOLDER>
        , <&macro_tap>
        , <&rgb_ug RGB_TOG>
        ;
    };

    shift: with_lshift {
      compatible = "zmk,behavior-macro-one-param";
      #binding-cells = <1>;
      bindings
        = <&macro_press>
        , <&kp LSHFT>
        , <&macro_tap>
        , <&macro_param_1to1 &kp MACRO_PLACEHOLDER>
        , <&macro_release>
        , <&kp LSHFT>
        ;
    };

    as: autoshift {
      compatible = "zmk,behavior-macro-one-param";
      #binding-cells = <1>;
      bindings
        = <&macro_press>
        , <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>
        , <&macro_pause_for_release>
        , <&macro_release>
        , <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>
        ;
    };
  };

  behaviors {
    as_ht: autoshift_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      bindings = <&shift>, <&kp>;

      tapping-term-ms = <190>;
    };

    hml: homewrow_mods_left {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;

      tapping-term-ms = <200>;
      hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
    };

    hmr: homewrow_mods_right {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;

      tapping-term-ms = <200>;
      hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
    };

    capdance: capdance {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      bindings = <&caps_word>, <&kp CAPS>;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
        &kp Q        &kp W          &kp F         &kp P        &kp B          &kp J      &kp L            &kp U         &kp Y          &kp SQT
        &hml LALT A  &hml LSHIFT R  &hml LCTRL S  &hml LCMD T  &kp G          &kp M      &hmr RCMD N      &hmr RCTRL E  &hmr RSHIFT I  &hmr RALT O
        &kp Z        &kp X          &kp C         &kp D        &kp V          &kp K      &kp H            &kp COMMA     &kp DOT        &kp FSLH
                                    &lt 3 ESC     &lt 2 TAB    &lt 1 SPACE    &lt 1 RET  &lt 2 BACKSPACE  &lt 4 DEL
      >;
    };

    code {
      bindings = <
        &kp N1           &kp N2     &kp N3     &kp N4    &kp N5      &kp N6  &kp N7    &kp N8                &kp N9              &kp N0
        &hml LALT GRAVE  &kp LSHFT  &kp LCTRL  &kp LCMD  &none       &none   &kp RCMD  &hmr RCTRL SEMICOLON  &hmr RSHFT MINUS    &hmr RALT EQUAL
        &none            &none      &none      &none     &kp CAPS    &none   &none     &kp LEFT_BRACKET      &kp RIGHT_BRACKET   &kp BACKSLASH
                                    &trans     &trans    &trans      &trans  &trans    &trans
      >;
    };

    function {
      bindings = <
        &kp F1    &kp F2     &kp F3     &kp F4    &kp F5     &kp F6   &kp F7    &kp F8     &kp F9     &kp F10
        &kp LALT  &kp LSHFT  &kp LCTRL  &kp LGUI  &kp F12    &kp F11  &kp RGUI  &kp RCTRL  &kp RSHFT  &kp RALT
        &none     &none      &none      &none     &none      &none    &none     &none      &none      &none
                             &trans     &trans    &trans     &trans   &trans    &trans
      >;
    };

    nav {
      bindings = <
        &none     &none      &none      &none     &none     &none    &none     &none     &none      &none
        &kp LALT  &kp LSHFT  &kp LCTRL  &kp LGUI  &none     &kp INS  &kp LEFT  &kp UP    &kp RIGHT  &kp PAGE_UP
        &none     &none      &none      &none     &none     &none    &kp HOME  &kp DOWN  &kp END    &kp PAGE_DOWN
                             &trans     &trans    &trans    &trans   &trans    &trans
      >;
    };

    media {
      bindings = <
        &kp C_POWER           &kp C_SLEEP_MODE    &as E             &none              &none     &none   &none   &kp K_LOCK  &sys_reset  &bootloader
        &kp C_BRIGHTNESS_INC  &kp C_FAST_FORWARD  &kp K_PLAY_PAUSE  &kp C_VOLUME_UP    &none     &none   &none   &none       &none       &none
        &kp C_BRIGHTNESS_DEC  &kp C_REWIND        &kp K_MUTE        &kp C_VOLUME_DOWN  &none     &none   &none   &none       &none       &none
                                                  &lt 5 ESC         &trans             &trans    &trans  &trans  &trans
      >;
    };

    mouse {
      bindings = <
        &none     &none      &none      &none     &none     &none      &none      &none     &none  &none
        &kp LALT  &kp LSHFT  &kp LCTRL  &kp LGUI  &none     &none      &none      &none     &none  &none
        &none     &none      &none      &none     &none     &none      &none      &none     &none  &none
                             &trans     &trans    &trans    &mkp LCLK  &mkp RCLK  &mkp MCLK
      >;
    };
  };
};
